package tests;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import exceptions.FullGameException;
import models.Board;
import models.Game;
import models.HumanPlayer;
import models.Player;
import models.Tile;

public class DetermineInitialPlayerTest {

	private Game testGame;
	@Before
	public void setUp() throws Exception {
		testGame = new Game(new Board(), 4);
		try {
			testGame.addPlayer(new HumanPlayer("1", testGame));
			testGame.addPlayer(new HumanPlayer("2", testGame));
			testGame.addPlayer(new HumanPlayer("3", testGame));
			testGame.addPlayer(new HumanPlayer("4", testGame));
			for(Player player : testGame.getPlayers().keySet()){
				//TODO reparenen: om een of andere manier worden de tegels niet uit de pile verwijderd
				testGame.setHand(player);
				testGame.getPile().shuffle();
				for(Tile tile : player.getHand()){
					System.out.println(player.getName() + ": " + tile.getColor()+tile.getSymbol());
				}
			}
		} catch (FullGameException e) {
			//Gebeurt niet in deze test
			System.out.println("TestNextPlayer vol");
		}
	}

	@Test
	public void testDetermineInitialPlayer(){
		
		testGame.determineInitialPlayer();
		Player player = testGame.getCurrentPlayer();
		System.out.println(player.getName());
		assertTrue(testGame.getPlayers().keySet().contains(player));
	}

}
