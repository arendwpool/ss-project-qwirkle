package utils;

import models.Game;
import models.Pile;
import models.Player;
import models.Tile;

public class ControllTilesUtil {
	/**
	 * Geeft een willekeurige tegel terug. Hiervoor wordt eerst de zak geshuffeld, waarna de eerste
	 * tegel uit de Pile wordt teruggegeven. TODO niet meer!! De teruggegeven tegel wordt dan ook uit de zak 
	 * verwijderd.
	 * @return tile
	 */
	public static Tile giveRandomTile(Pile pile) {
		pile.shuffle();
		Tile tile = pile.getTiles().get(0);
		return tile;
	}
	
	/**
	 * 
	 * Kijkt hoeveel tegels een gegeven speler in zijn hand heeft. Als dit minder dan 6 is worden er 
	 * een aantal willekeurige tegels gegeven zodat de hand weer 6 tegels heeft.
	 * @param player
	 */
	public static void setHand(Player player, Pile pile) {
		int handSize = Game.DEFAULT_HAND_SIZE - player.getHand().size();
		for (int i = 0; i < handSize; i++) {
			Tile tile = giveRandomTile(pile);
			pile.getTiles().remove(tile);
			player.getHand().add(tile);
		}
	}

	
	/**
	 * Vergelijkt Symbolen van twee verschillende Tiles.
	 * @param tileA
	 * @param tileB
	 */
	public static boolean compareSymbol(Tile tileA, Tile tileB) {
		return tileA.getSymbol() == tileB.getSymbol();
		
	}
	
	/**
	 * Vergelijkt Kleuren van twee verschillende Tiles.
	 * @param tileA
	 * @param tileB
	 */
	public static boolean compareColor(Tile tileA, Tile tileB) {
		return tileA.getColor() == tileB.getColor();
	}
}
