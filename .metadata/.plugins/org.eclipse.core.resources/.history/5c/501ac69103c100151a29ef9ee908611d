package server;

import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.List;

public class Server extends Thread {
    
	
	private static final String USAGE = "usage: " + Server.class.getName() + " <port>";
    private static final int port = 1337;
    private ServerSocket sockey;
    private List<ClientHandler> threads;
    
    public static void main(String[] args) {
    	Server server = new Server();
    }
    
    public Server() {
    	
    }
    
    public void run() {
    	
    }
    
    public void serverStart() {
    	
    }
    
    public void readInput() {
    	
    }
    
    public void determineCommandString() {
    	
    }
    
    /**
     * Add a ClientHandler to the collection of ClientHandlers.
     * @param handler ClientHandler that will be added
     */
    public void addHandler(ClientHandler handler) {
        threads.add(handler);
    }
    
    /**
     * Remove a ClientHandler from the collection of ClientHanlders. 
     * @param handler ClientHandler that will be removed
     */
    public void removeHandler(ClientHandler handler) {
        threads.remove(handler);	
    }
    
    /**
     * stuurt een bericht door gebruik te maken van de collectie van de verbonden Clienthandlers
     * naar alle verbonden Clients.
     * @param message 
     * @throws IOException 
     */
    public void broadcast(String message) throws IOException {
    	 for (ClientHandler handler : threads) {
         	handler.sendMessage(message);
         }
    }
    
    public void shutdown() {
    	
    }

}