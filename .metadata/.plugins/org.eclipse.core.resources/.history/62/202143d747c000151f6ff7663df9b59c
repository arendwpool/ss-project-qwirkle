package server;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;

import models.Game;
import models.Player;

public class ClientHandler {
	
    private Server server;
    private Socket sock;
    private BufferedReader in;
    private BufferedWriter out;
    private String clientName;
    private Game game;
    private Player player;
	
    /**
     * Constructs a ClientHandler object
     * Initialises both Data streams.
     */
    //@ requires serverArg != null && sockArg != null;
    public ClientHandler(Server serverArg, Socket sockArg) throws IOException {
    	server = serverArg;
    	in = new BufferedReader(new InputStreamReader(sockArg.getInputStream()));
        out = new BufferedWriter(new OutputStreamWriter(sockArg.getOutputStream()));
    }
    
    public void announce(){
    	
    }
    
    public void run(){
    	
    }
    
    public void sendMessage(String message){
    	
    }
    
    public void broadcast(String Message){
    	
    }
    
    /**
     * This ClientHandler signs off from the Server and subsequently
     * sends a last broadcast to the Server to inform that the Client
     * is no longer participating in the chat. 
     * @throws IOException 
     */
    private void shutdown() throws IOException {
        server.removeHandler(this);
        server.broadcast("[" + clientName + " has left]");
    }

}
